#include<iostream>
#include<algorithm>
#include<vector>
#include<climits>
#include<cmath>
#include<queue>
#include<string>
#include<deque>
#include<queue>

#define endl "\n"

using namespace std;

int N;
int input[15];		//입력 받는 value 값
vector<int> vec;		//입력받은 연산자의 값
bool visited[15];		//방문여부
int arr[15];		//자리가 정해진 연산자들의 종류를 저장
int MAX = INT_MIN;
int MIN = INT_MAX;

void Input() {
	cin >> N;
	for (int i = 0; i < N; i++) { cin >> input[i]; }
	for (int i = 1; i <= 4; i++) {
		int a;
		cin >> a;
		for (int k = 0; k < a; k++) { vec.push_back(i); }
	}

	//for (int i = 0; i < vec.size(); i++) { cout << vec[i] << " "; }
}

void Solution(int cnt) {
	if (cnt == N - 1) {
		int VAL = input[0];
		for (int i = 0; i < cnt; i++) {
			if (arr[i] == 1) { VAL = VAL + input[i + 1]; }
			else if (arr[i] == 2) { VAL = VAL - input[i + 1]; }
			else if (arr[i] == 3) { VAL = VAL * input[i + 1]; }
			else if (arr[i] == 4) { VAL = VAL / input[i + 1]; }
		}
		MAX = max(MAX, VAL);
		MIN = min(MIN, VAL);
	}
	else if (cnt >= N) { return; }

	for (int i = 0; i < vec.size(); i++) {
		if (!visited[i]) {
			visited[i] = true;
			arr[cnt] = vec[i];
			Solution(cnt + 1);
			visited[i] = false;
		}
	}
}

void Solve() {
	Input();
	Solution(0);
	cout << MAX << endl << MIN;
}

int main(void) {
	ios::sync_with_stdio(false);
	cin.tie(NULL);
	cout.tie(NULL);

	Solve();
}


#include<iostream>
#include<algorithm>
#include<string>
#include<queue>
#include<deque>
#include<vector>

#define endl "\n"
using namespace std;

int N,M;
char map[111][111];
bool chk[111][111];
void Input() {
	cin >> N >> M;
	for (int i = 0; i < N; i++) {
		for (int j = 0; j < M; j++) {
			cin >> map[i][j];
			if (map[i][j] == '*') { chk[i][j] = true; }
		}
	}
}
int result;
vector<vector<int>> vec;
void Solve() {
	for (int i = 0; i < N; i++){
		for (int j = 0; j < M; j++) {
			if (map[i][j] == '*') {
				int x = i, y = j,k = 1;
				if (x - k >= 0 && x + k < N && y - k >= 0 && y + k < M) {
					while (map[x - k][y] == '*'&& map[x + k][y] == '*'&& map[x][y-k] == '*'&& map[x][y+k] == '*') {
						chk[x][y] = false;
						chk[x - k][y] = false; chk[x + k][y] = false; chk[x][y - k] = false; chk[x][y + k] = false;
						vector<int> v;
						v.push_back(x+1); v.push_back(y+1); v.push_back(k); result++;
						vec.push_back(v);
						k++;
						if (x - k >= 0 && x + k < N && y - k >= 0 && y + k < M) {

						}
						else break;
					}
				}
			}
		}
	}
	for (int i = 0; i < N; i++) {
		for (int j = 0; j < M; j++) {
			if (chk[i][j] == true) { cout << -1; return; }
		}
	}
	cout << result<<endl;
	for (int i = 0; i < vec.size(); i++) {
		cout << vec[i][0]<<" "<<vec[i][1]<<" "<<vec[i][2]<<endl;
	}

}

int main(void) {
	Input();
	Solve();
}

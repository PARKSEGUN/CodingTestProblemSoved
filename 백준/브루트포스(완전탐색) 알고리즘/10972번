//처음에 풀었던 코드는 모든 경우의수를 확인해서 그 다음값을 찾아내는 것인데 시간초과가 발생했다.

#include<iostream>
#include<vector>
#include<algorithm>

using namespace std;

int N;
int input[10001];
int visited[10001];
int result[10001];
bool END;

void solve(int cnt) {
	if (cnt == N) {
		if (!END) {
			int count = 0;
			for (int i = 0; i < N; i++) {
				if (result[i] == input[i]) { count++; }
			}
			if (count == N) {
				END = true;
			}
		}
		else {
			for (int i = 0; i < N; i++) {
				cout << result[i] << " ";
			}
			exit(0);
		}
	}
	for (int i = 1; i <= N; i++) {
		if (!visited[i]) {
			visited[i] = true;
			result[cnt] = i;
			solve(cnt + 1);
			visited[i] = false;
		}
	}
}

int main(void) {
	cin >> N;
	for (int i = 0; i < N; i++) {
		cin >> input[i];
	}
	solve(0);
	cout << -1;
}

//그래서 다음 순열이 오는 값을 구하는 공식을 찾아내서 짜보았다.

#include<iostream>
#include<vector>
#include<algorithm>

using namespace std;

int N;
int input[10001];
int visited[10001];
int result[10001];
bool END;


bool compare[10001];

int main(void) {
	cin >> N;
	for (int i = 0; i < N; i++) {
		cin >> input[i];
	}
	if (N == 1) { cout << -1; return 0; }
	if (input[N - 1] > input[N - 2]) {
		swap(input[N - 1], input[N - 2]);
		for (int i = 0; i < N; i++) {
			cout << input[i] << " ";
		}
		return 0;
	}
	else {
		for (int i = N - 1; i >= 1; i--) {
			if (input[i] > input[i - 1]) { 
				for (int j = N - 1; j >= i; j--) {
					if (input[i-1] < input[j]) {
						swap(input[i - 1], input[j]);

						sort(input + i, input + N);

						j = i - 1;
					}
				}
				i = 0;
			}
			else {
				if (i == 1) { cout << -1; return 0; }
			}
		}
	}
	for (int i = 0; i < N; i++) {
		cout << input[i] << " ";
	}cout << endl;

}

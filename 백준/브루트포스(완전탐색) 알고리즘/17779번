#include<iostream>
#include<algorithm>
#include<vector>
#include<queue>
#include<cmath>
#include<vector>
//#include<windows.h>

#define endl "\n"

using namespace std;

int N;
int map[22][22];
int value[22][22];

void Input() {
	cin >> N;
	for (int i = 0; i < N; i++) {
		for (int j = 0; j < N; j++) {
			cin >> map[i][j];
		}
	}
}
int submap[22][22];
void print() {
	for (int i = 0; i < N; i++) {
		for (int j = 0; j < N; j++) {
			cout << submap[i][j] << " ";
		}cout << endl;
	}
}
void reset() {
	for (int i = 0; i < N; i++) {
		for (int j = 0; j < N; j++) {
			submap[i][j] = 0;
		}
	}
}
int result=987765432;
void resultMin() {
	int MAX = 0;
	int MIN = 987654321;
	int arr[6] = { 0, };

	for (int i = 0; i < N; i++) {
		for (int j = 0; j < N; j++) {
			arr[submap[i][j]] += map[i][j];
		}
	}

	for (int i = 1; i < 6; i++) { MAX = max(MAX, arr[i]); }
	for (int i = 1; i < 6; i++) { MIN = min(MIN, arr[i]); }

	result = min(result, MAX - MIN);
}
void divide(int x, int y, int d1, int d2) {		//맵 분할
	if (y - d1 >= 0 && y + d2 < N && x + d1 + d2 < N) {	//경계선
		for (int i = 0; i <= d1; i++) { submap[x + i][y - i] = 5; }
		for (int i = 0; i <= d2; i++) { submap[x + i][y + i] = 5; }
		for (int i = 0; i <= d2; i++) { submap[x + d1 + i][y - d1 + i] = 5; }
		for (int i = 0; i <= d1; i++) { submap[x + d2 + i][y + d2 - i] = 5; }

		for (int i = x + 1; i < x + d1 + d2 ; i++) {
			bool chk = false;
			for (int j = 0; j < N; j++) {
				if (submap[i][j] == 5) { if (chk == true) { break; }chk = true; }
				if (chk == true) { submap[i][j] = 5; }
			}
		}
	
		for (int i = 0; i < N; i++) {
			for (int j = 0; j < N; j++) {
				if (submap[i][j] == 0) {
					if (i >= 0 && x + d1 > i && 0 <= j && j <= y) { submap[i][j] = 1; }
					else if (i >= 0 && x + d2 >= i && y < j && j < N) { submap[i][j] = 2; }
					else if (i >= x + d1 && N > i && 0 <= j && j < y - d1 + d2) { submap[i][j] = 3; }
					else if (i > x + d2 && N > i && y - d1 + d2 <= j && j < N) { submap[i][j] = 4; }
				}
			}
		}
		resultMin();
	}
}
void DFS(int cnt) {

}
 
void Solve() {

	for(int i1=1;i1<N-1;i1++){
		for (int i2 = 1; i2 < N-1; i2++) {
			for (int i3 = 1; i3 < N; i3++) {
				for (int i4 = 1; i4 < N; i4++) {
					divide(i1, i2, i3, i4);
					reset();
				}
			}
		}
	}
	cout << result;
}

int main(void) {
	ios::sync_with_stdio(0);
	cin.tie(0);
	cout.tie(0);
	Input();
	Solve();
}

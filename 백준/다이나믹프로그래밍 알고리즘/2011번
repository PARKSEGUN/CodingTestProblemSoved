질문에서 반례를 보고 해결했다.
0을 처리하는 부분에서 입력은 아무렇게나 들어올 수 있기 때문에
0을 처리해주는 것이 중요했다.
따라서 2자리수가 10일때와 20 이 들어왔을때를 따로 처리하게 해주었고 두자리수는 10이상이여야 하고 한자리수나 두자리수의 값이 0 이 나오면 안된다

#include<iostream>
#include<vector>
#include<queue>
#include<algorithm>
#include<string>
#include<memory.h>

using namespace std;

string str;

void Input() {
	cin >> str; 
}
long long dp[5555];
void Solve() {
	dp[0] = 1;
	if (str.size() > 0) { if (str[0]  - '0' > 0)dp[1] = 1; else dp[1] = 0; }
	
	for (long long i = 2; i <= str.size(); i++) {
		if ((str[i - 2] - '0') * 10 + str[i - 1] - '0' <= 26 && (str[i - 2] - '0') * 10 + str[i - 1] - '0' >= 10) {
			if ((str[i - 2] - '0') * 10 + str[i - 1] - '0' == 10 || (str[i - 2] - '0') * 10 + str[i - 1] - '0' == 20) {
				dp[i] = dp[i - 2] % 1000000;
			}
			else {
				dp[i] = dp[i - 2] % 1000000 + dp[i - 1] % 1000000;
				dp[i] %= 1000000;
			}
		}
		else if(str[i - 1] - '0'>0) { dp[i] = dp[i - 1] % 1000000; dp[i] %= 1000000;}
		
	}
	cout << dp[str.size()];
}

int main(void) {
	ios::sync_with_stdio(0);
	cin.tie(0);
	cout.tie(0);

	Input();
	Solve();

}

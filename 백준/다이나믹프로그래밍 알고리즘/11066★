다이나믹 프로그래밍에 대해서 더 공부해야될 필요성을 느꼈다. 
재귀함수를 어떻게 작성해야될지 감이 오지않아서 구글링으로 코드를 봤다.
일단 먼저 다이나믹프로그래밍이 진행되는 큰 틀을 암기하자


#include<iostream>
#include<algorithm>
#include<vector>
#include<climits>
#include<cmath>
#include<queue>

#define endl "\n"
using namespace std;

int N;
int arr[555];
int dp[555][555];

void Input() {
	cin >> N;
	for (int i = 0; i < N; i++) { cin >> arr[i]; }
}

int DP(int start, int end) {
	if (start == end) { return dp[start][end]=0; }
	if (end - start == 1) { return dp[start][end] = arr[start] + arr[end]; }
	if (dp[start][end] != 987654321) { return dp[start][end]; }
	for (int i = start; i < end; i++) { dp[start][end] = min(dp[start][end], DP(start, i) + DP(i + 1, end)); }
	int sum = 0;
	for (int i = start; i <= end; i++) { sum += arr[i]; }
	return dp[start][end]+=sum;
}
int result;
void Solution() {
	int K;
	cin >> K;
	for (int k = 0; k < K; k++) {
		Input();
		for (int i = 0; i < N; i++) {
			for (int j = 0; j < N; j++) { dp[i][j] = 987654321; }
		}
		cout << DP(0, N - 1)<<endl;
	}

}


int main(void) {
	ios::sync_with_stdio(false);
	cin.tie(NULL);
	cout.tie(NULL);

	Solution();
}

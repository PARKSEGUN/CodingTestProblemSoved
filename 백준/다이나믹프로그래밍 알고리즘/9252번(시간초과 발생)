반례를 찾는데에 어려움이 있었고 어떤식으로 작성을해야 올바르게 나올까가 아닌 뭐가 나와야하는지 답변을 미리 알고 이 답변을 출력시키기위해서는 어떤 공식을 써야할지를 생각했다.
왜 이 문자열을 출력하는지에 자세하게 알지 못하고 공식을 발견해서 맞춘느낌이다 조금더 공부하자


문제를 맞았다고 생각하고 넘어갔던 문제인거같은데 시간초과가 발생한다는 것을 후에 발견했다 고쳐볼수 있도록 

#include<iostream>
#include<algorithm>
#include<string>
#include<queue>
#include<deque>
#include<vector>

#define endl "\n"
using namespace std;

string s1, s2;

void input() {
	cin >> s1 >> s2;
}
int dp[1111][1111];
char result[1111];
void find_LCS() {
	bool chk = false;
	int key = 0;
	int x = s1.size();
	int y = s2.size();
	for (int k = dp[s1.size()][s2.size()]; k >=1; k--) {		//LCS값 추출
		for (int i = 0; i <=x; i++) {
			for (int j = 0; j <= y; j++) {
				if (k == dp[i][j]) {
					result[k - 1] = s2[j - 1];
					y = j - 1;
					chk = true; break;
				}
			}
			if (chk == true) { break; }
		}
		chk = false;
	}
}
void solve() {
	for (int i = 0; i < s1.size(); i++) {		//dp배열에 값 저장
		for (int j = 0; j < s2.size(); j++) {
			if (s1[i] == s2[j]) {
				dp[i + 1][j + 1] = dp[i][j] + 1;
			}
			else {
				dp[i + 1][j + 1] = max(dp[i][j + 1], dp[i + 1][j]);
			}
		}
	}
	find_LCS();//LCS값 추출
	//반례 찾기 위해
	/*cout << "    ";
	for (int i = 0; i < s2.size(); i++) { cout << s2[i] << " "; }cout << endl;
	for (int i = 0; i <= s1.size(); i++) {
		if (i > 0) { cout << s1[i - 1] << " "; }
		for (int j = 0; j <= s2.size(); j++) {
			cout << dp[i][j] << " ";
		}cout << endl;
	}cout << endl;*/
	cout << dp[s1.size()][s2.size()] << endl;
	for (int i = 0; i < dp[s1.size()][s2.size()]; i++) {
		cout << result[i];
	}
}

int main(void) {
	input();
	solve();
}

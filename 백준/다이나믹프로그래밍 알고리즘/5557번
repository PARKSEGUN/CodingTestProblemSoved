결과로 나올수있는 값의 범위가 0~20 이였다는 것을 알고 dp 설정을 해주니 쉽게 해결 할 수 있는 문제였다.
잘 풀어낸 

#include<iostream>
#include<algorithm>
#include<string>
#include<queue>
#include<deque>
#include<vector>

#define endl "\n"
using namespace std;
int N;
int arr[111];
void input() {
	cin >> N;
	for (int i = 0; i < N; i++) { cin >> arr[i]; }
}
long long dp[111][22];
void solve() {
	dp[0][arr[0]] = 1;		//dp에 초깃값 설정
	for (int i = 0; i < N - 2; i++) {
		for (int j = 0; j <= 20; j++) {
			if (dp[i][j] > 0) {
				if (j - arr[i + 1] >= 0)
					dp[i + 1][j - arr[i + 1]] += dp[i][j];
				if (j + arr[i + 1] <= 20)
					dp[i + 1][j + arr[i + 1]] += dp[i][j];
			}
		}
	}

	/*for (int i = 0; i <=20 ; i++) {
		for (int j = 0; j <N-1; j++) {
			cout << dp[j][i] << " ";
		}cout << endl;
	}*/

	cout << dp[N - 2][arr[N - 1]];
}

int main(void) {
	input();
	solve();
}

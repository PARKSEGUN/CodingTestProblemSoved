//이 문제를 보고 어떻게 풀까 하다가 일단 2*9의 그림을 그려보고 한번 구해보자 라고 생각을했다. 답이 55가지 였기때문에 어떤 규칙을 갖고있는지 알아내고 싶었다.
//근데 손으로 직접 그려가면서 했지만 55와는 계속 다른답이나와 그냥 처음부터 길이가 1인것부터 차례로 올라가면서 그림을 그려보니 조각의 개수가 피보나치 수열과 값이 같았고
// 같은 식으로 점화식처럼 풀어나가면 된다는 것을 알았다.
//다이나믹프로그래밍(동적 계획법)은 점화식과 관련이 있다는것을 계속 생각하고 어떻게 점화식과 연관을 지을 수 있을지 생각하는 습관을 들이자.

#include<iostream>
using namespace std;
int arr[1001];
int dp(int x) {
	if (x == 0) { return 1; }
	if (x == 1) { return 1;}
	if (arr[x] != 0) { return arr[x]; }
	return arr[x] = (dp(x - 1) + dp(x - 2))%10007;
}


int main(void) {
	int N;
	cin >> N;
	cout<<dp(N);
}

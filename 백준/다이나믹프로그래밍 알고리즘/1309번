#include<iostream>
#include<algorithm>
#include<vector>
//다이나믹프로그래밍은 점화식과 관련되어있듯이 문제를 해결하는데에있어서 규칙이 존재할 수 있다는 것을 알았다.
//이번문제는 어떤 점화식으로 나타낼 수 있을지 생각하던중에 배치할 수 있는 경우의 수가 N=(N-1)*2+N-2 를 따른다는 것을 발견했다.



#include<climits>
#include<cmath>
#define endl "\n"
#define MOD 9901
using namespace std;

int N;
long long dp[100001];

void Input() {
	cin >> N;
}

void Solution() {
	dp[0] = 1; dp[1] = 3;
	for (int i = 2; i <= N; i++) {
		dp[i] = dp[i - 1] * 2+ dp[i - 2];
		dp[i] %= MOD;
	}
	cout << dp[N];

}

void Solve() {
		Input();
		Solution();
}

int main(void) {
	ios::sync_with_stdio(false);
	cin.tie(NULL);
	cout.tie(NULL);

	Solve();
}

#include<iostream>
#include<algorithm>
#include<vector>
#include<climits>
#include<cmath>
#define endl "\n"

using namespace std;

int N;
int arr[1111];
int result = 0;
int dpdp[1111];
int dp[1111];
bool updown[1111];

void Input() {
	cin >> N;
	for (int i = 0; i < N; i++) {
		cin >> arr[i];
	}
}

void Solution() {
	int MAX = arr[0];
	for (int i = 0; i < N; i++) {
		dp[i] = 1;
		for (int j = 0; j < i; j++) {
			if (arr[i] > arr[j]) {
				if (dp[i] < dp[j] + 1) {
					dp[i] = dp[j] + 1;
				}
			}
			else if (arr[i] < arr[j]) {
				if (updown[j]) {
					dpdp[i] = max(dpdp[i], dpdp[j] + 1);
				}
				else {
					dpdp[i] = max(dpdp[i], dp[j] + 1);
					updown[i] = true;
				}
			}
		}
		if (dp[i] > dpdp[i]) { updown[i] = false; }
		result = max(result, dp[i]);
		result = max(result, dpdp[i]);
	}

	//for (int i = 0; i < N; i++) { cout << dp[i] << " "; }cout << endl;
	//for (int i = 0; i < N; i++) { cout << dpdp[i] << " "; }cout << endl;
	//for (int i = 0; i < N; i++) { cout << updown[i] << " "; }cout << endl;

	cout << result;
}

void Solve() {
	Input();
	Solution();
}

int main(void) {
	ios::sync_with_stdio(false);
	cin.tie(NULL);
	cout.tie(NULL);

	Solve();
}

DFS를 사용하면 쉽게 해결할 수 있다.

#include<iostream>
#include<algorithm>
#include<vector>
#include<cmath>

#define endl "\n"
using namespace std;
int N, M;
vector<pair<int, int>> noMix;
bool chk[222][222];
void  Input() {
	cin >> N >> M;
	int a, b;
	for (int i = 0; i < M; i++) {
		cin >> a >> b;
		chk[a][b] = true;
		chk[b][a] = true;
	}
}
int arr[5];
int result;
void DFS(int cnt,int range) {
	if (cnt == 0) {
		for (int i = range; i <= N; i++) { arr[cnt] = i; DFS(cnt + 1, i + 1); }
	}
	else if (cnt == 1) {
		for (int i = range; i <= N; i++) {
			if (chk[arr[0]][i] == false) {
				arr[cnt] = i; DFS(cnt + 1, i + 1);
			}
		}
	}
	else if (cnt == 2) {
		for (int i = range; i <= N; i++) {
			if (chk[arr[1]][i] == false&& chk[arr[0]][i] == false) {
				arr[cnt] = i; DFS(cnt + 1, i + 1);
			}
		}
	}
	else if (cnt == 3) {	result++;	}
}

void Solve() {
	DFS(0, 1);
	cout << result;
}

int main(void) {
	Input();
	Solve();
}

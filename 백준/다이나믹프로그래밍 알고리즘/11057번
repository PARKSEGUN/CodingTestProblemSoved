//이번문제도 저번문제를 해결했던 것처럼 규칙적인 공식을 찾아내려 했지만 찾아낼 수가 없었다.
//문제를 보고 바로 규칙적인 공식이 무엇인지를 찾으려고 애쓰는 것은 좋지 않은 습관이라고 생각했다.
//문제가 어떤 구조로 진행되는지 파악하는게 오히려 문제해결에 도움이되었다.

#include<iostream>
#include<algorithm>
#include<vector>
#include<climits>
#include<cmath>
#define endl "\n"
#define MOD 10007
using namespace std;

int N;
int dp[1001][10];
int result = 0;
void Input() {
	cin >> N;
}

void Solution() {
	for (int i = 0; i < 10; i++) {
		dp[1][i] = 1;
	}
	for (int i = 2; i <= N; i++) {
		for (int j = 0; j < 10; j++) {
			for (int k = 0; k <= j; k++) {
				dp[i][j] += dp[i - 1][k];
				dp[i][j] %= MOD;
			}
		}
	}
	for (int i = 0; i < 10; i++) {
		result += dp[N][i];
		result %= MOD;
	}
	cout << result;
}

void Solve() {
		Input();
		Solution();
}

int main(void) {
	ios::sync_with_stdio(false);
	cin.tie(NULL);
	cout.tie(NULL);

	Solve();
}

처음으로 접해보는 위상정렬 문제였다.
이미 자료구조 시간에 한번 개념을 배웠던 내용이라 이해하는데 어렵지는 않았다.
수업시간에 배웠던 내용을 코드로 작성해보니 새로웠고 그 내용으로 문제를 해결 할 수 있는 것이 신기했다.
위상정렬은 어떤 경우에 사용되는 알고리즘인지 다시 한번 암기하고넘어가자.
위상 정렬은 DAG(Directed Acyclic Graph) 즉, 사이클이 없는 방향 그래프에서 순서가 있을 때 사용하는 알고리즘이다.
이 줄 세우기 문제에서는 각 학생들을 사이클이 발생하지 않고 순서에 맞춰서 정렬시켜야 하기 때문에 딱 맞는 문제였다.

#include<iostream>
#include<vector>
#include<queue>

using namespace std;

int N, M;
int degree[33333];
vector<vector<int>> vec(33333);
queue<int> q;
void Input() {
	cin >> N >> M;
	for (int i = 0; i < M; i++) {
		int a, b;
		cin >> a >> b;
		vec[a].push_back(b);
		degree[b]++;
	}
	for (int i = 1; i <= N; i++) { if (degree[i] == 0) { q.push(i); } }
}

void Solve() {
	while (q.size() != 0) {
		int tmp = q.front();
		q.pop();
		cout << tmp << " ";
		for (int i = 0; i < vec[tmp].size(); i++) {
			degree[vec[tmp][i]]--;
			if (degree[vec[tmp][i]] == 0) { q.push(vec[tmp][i]); }
		}
	}
}


int main(void) {
	ios::sync_with_stdio(0);
	cin.tie(0);
	cout.tie(0);
	Input();
	Solve();
}

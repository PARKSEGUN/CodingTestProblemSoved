DFS를 사용해서 쉽게 풀어낼 수 있는 문제였다.

#include<iostream>
#include<algorithm>
#include<string>
#include<queue>
#include<deque>
#include<vector>
#include<climits>

#define endl "\n"
using namespace std;

int N, L, R, X;
int input[22];

void Input() {
	cin >> N >> L >> R >> X;
	for (int i = 0; i < N; i++) {
		cin >> input[i];
	}
}
int arr[22];
bool visited[22];
int result;
void DFS(int cnt, int range) {
	if (cnt >= 2) {
		int MAX = 0, MIN = INT_MAX, sum = 0;
		for (int i = 0; i < cnt; i++) {
			MAX = max(MAX, arr[i]);
			MIN = min(MIN, arr[i]);
			sum += arr[i];
		}
		if (sum >= L && sum <= R && MAX - MIN >= X) { result++; }
	}
	for (int i = range; i < N; i++) {
		if (visited[i] == false) {
			visited[i] = true;
			arr[cnt] = input[i];
			DFS(cnt + 1,i+1);
			visited[i] = false;
		}
	}
}
void Solve() {
	DFS(0, 0);
	cout << result;
}

int main(void) {
	Input();
	Solve();
}

#include<iostream>
#include<string>
#include<vector>
#include<algorithm>
#include<queue>

#define endl "\n"

using namespace std;

int dx[6] = { -2,-2,0,0,2,2 };
int dy[6] = { -1,+1,-2,2,-1,1 };
int N;
int ss[2];		//시작
int ee[2];		//끝
void Input() {
	cin >> N;
	cin >> ss[0] >> ss[1] >> ee[0] >> ee[1];
}
queue<int> q[3];
bool visited[222][222];
int result;

void BFS() {
	q[0].push(ss[0]); q[1].push(ss[1]); q[2].push(0);
	visited[ss[0]][ss[1]] = true;		
	while (q[0].empty() != true) {
		int x = q[0].front();
		int y = q[1].front();
		int cnt = q[2].front();
		q[0].pop(); q[1].pop(); q[2].pop();
		for (int i = 0; i < 6; i++) {

			int nx = x + dx[i];
			int ny = y + dy[i];
			if (nx >= 0 && nx < N && ny >= 0 && ny < N) {
				if (nx == ee[0] && ny == ee[1]) { cout << cnt+1; return; }
				if (visited[nx][ny] == false) {
					visited[nx][ny] = true;
					q[0].push(nx); q[1].push(ny); q[2].push(cnt + 1);
				}
			}
		}
	}
	cout << -1;
}

void Solution() {
	BFS();
}

void Solve() {
	Input();
	Solution();
}

int main(void) {
	ios::sync_with_stdio(false);
	cin.tie(NULL);
	cout.tie(NULL);

	Solve();

	return 0;
}
